This list contains not yet implemented features and possible improvements.
Remve items from this list if it is implemented.

General features:
* Simple assertions
* Any symbol does not match line end
* Unicode classes
* Newline conventions
* Relative backreferences
* Recursive backreferences
* Duplicated subputtern numbers (in alternatives)
* Named subpatterns
* Subpatterns for reference usage only (DEFINE)
* Case-unsensetiveness
* Modifiers (case turn/off, etc.)
* Match start reset
* Zero-lenght string match
* Comments
* More advanced lookbehind - with alternatives or even with non-fixed size

Library:
* Fix error with lookbehind with non-ASCII symbols
* UTF-16 and UTF-32 matchers
* "OneOf" normalization/optimization
* C++ functions generator
* More advanced auto-possessification

LLVM Generator:
* Optimization of state save chain node structure size
* Optimization for expressions started with fixed sequence (like Knuth–Morris–Pratt algorithm)
* Optimization for sequences, terminated with single symbol (prevent multiple rollback steps)
* Use fixed length sequence optimization for sequences with counter
* Other optimizations, that can eliminate recursion in result optimized code

Tests:
* More Unicode tests
